Cross-Site Request Forgery (CSRF) is an exploit that forces a user to 
execute unwanted actions on a website for which they are currently
authenticated. The attacker generates a malicious HTTP request which
inherits the identity and privileges of the victim and causes an 
unauthorized state change.

Because the attacker has no way of viewing the response of the malicoius
request, the attacks are generally targeted towards state-changing 
requests, not data theft.

Typical attacks involve making a user unknowingly transfer funds from a
bank account, changing a password, or changing other account details.

How to perform the exploit
--------------------------
1. Wait for an user to be authenticated to the target website
2. Send a malicious link to the user
    www.bank.com/transfers&action=send&target=1234578&amt=9999
   but disguise the link as something benign
   <a href=<malicious link> cute dog pictures!/>
3. When the user clicks the link, a request will be sent from their 
    browser, using the already authenticated session they had open. The
    link will be processed as if coming from a legitimate request.

Another, trickier, way to present the malicious URL to a victim is to 
include a 0x0 pixel image in an email, website, etc and embed the URL 
within the src property of the image. The browser or email client will
automatically attempt to download the image from the indicated source,
and the user will never even realize what's happening. 

How to defend against CSRF
--------------------------
The easiest way to defend against this kind of attack is to ask for user
confirmation on all state-changing actions (or at least the ones that may
have severe consequences). This way, when the server gets the rogue HTTP
request, it will send a confirmation response before doing any actual
processing.

Another way to mitigate these attacks is to append a unique identifier
to the HTTP request. This identifer should be a hidden form field on the 
web page itself and randomly generated from a PRNG. The attacker would 
thus have no knowledge of the hidden identifier, and the request would 
be seen as a fake. No further action is taken. 
